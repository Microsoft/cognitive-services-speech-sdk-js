{"version":3,"sources":["../../src/common/IConnection.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;AASlC,IAAY,eAKX;AALD,WAAY,eAAe;IACvB,qDAAI,CAAA;IACJ,+DAAS,CAAA;IACT,iEAAU,CAAA;IACV,qEAAY,CAAA;AAChB,CAAC,EALW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAK1B","file":"IConnection.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { ConnectionEvent } from \"./ConnectionEvents\";\nimport { ConnectionMessage } from \"./ConnectionMessage\";\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse\";\nimport { EventSource } from \"./EventSource\";\nimport { IDisposable } from \"./IDisposable\";\nimport { Promise } from \"./Promise\";\n\nexport enum ConnectionState {\n    None,\n    Connected,\n    Connecting,\n    Disconnected,\n}\n\nexport interface IConnection extends IDisposable {\n    id: string;\n    state(): ConnectionState;\n    open(): Promise<ConnectionOpenResponse>;\n    send(message: ConnectionMessage): Promise<boolean>;\n    read(): Promise<ConnectionMessage>;\n    events: EventSource<ConnectionEvent>;\n}\n"]}