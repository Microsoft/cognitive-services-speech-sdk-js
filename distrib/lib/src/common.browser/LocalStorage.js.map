{"version":3,"sources":["../../src/common.browser/LocalStorage.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;AAElC,6CAAwE;AAExE;IAAA;QAEW,QAAG,GAAG,UAAC,GAAW;YACrB,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;aACtC;YAED,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC,CAAA;QAEM,aAAQ,GAAG,UAAC,GAAW,EAAE,UAAkB;YAC9C,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;aACtC;YAED,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;aACzC;YAED,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC,CAAA;QAEM,QAAG,GAAG,UAAC,GAAW,EAAE,KAAa;YACpC,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;aACtC;YAED,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC,CAAA;QAEM,WAAM,GAAG,UAAC,GAAW;YACxB,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;aACtC;YAED,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAA;IACL,CAAC;IAAD,mBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,oCAAY","file":"LocalStorage.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nimport { ArgumentNullError, IKeyValueStorage } from \"../common/Exports\";\n\nexport class LocalStorage implements IKeyValueStorage {\n\n    public get = (key: string): string => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        return localStorage.getItem(key);\n    }\n\n    public getOrAdd = (key: string, valueToAdd: string): string => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        const value = localStorage.getItem(key);\n        if (value === null || value === undefined) {\n            localStorage.setItem(key, valueToAdd);\n        }\n\n        return localStorage.getItem(key);\n    }\n\n    public set = (key: string, value: string): void => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        localStorage.setItem(key, value);\n    }\n\n    public remove = (key: string): void => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        localStorage.removeItem(key);\n    }\n}\n"]}